// Code generated by gocc; DO NOT EDIT.

package parser

import (
	"github.com/Solarcode-org/Orion/lib/ast"
	"github.com/Solarcode-org/Orion/lib/token"
)

type (
	ProdTab      [numProductions]ProdTabEntry
	ProdTabEntry struct {
		String     string
		Id         string
		NTType     int
		Index      int
		NumSymbols int
		ReduceFunc func([]Attrib, interface{}) (Attrib, error)
	}
	Attrib interface {
	}
)

var productionsTable = ProdTab{
	ProdTabEntry{
		String: `S' : FuncCallList	<<  >>`,
		Id:         "S'",
		NTType:     0,
		Index:      0,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncCallList : FuncCall	<< ast.NewFuncCallList(X[0]) >>`,
		Id:         "FuncCallList",
		NTType:     1,
		Index:      1,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return ast.NewFuncCallList(X[0])
		},
	},
	ProdTabEntry{
		String: `FuncCallList : FuncCallList FuncCall	<< ast.AppendFuncCall(X[0], X[1]) >>`,
		Id:         "FuncCallList",
		NTType:     1,
		Index:      2,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return ast.AppendFuncCall(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `FuncCall : id DataList	<< ast.NewFuncCall(X[0].(*token.Token), X[1]) >>`,
		Id:         "FuncCall",
		NTType:     2,
		Index:      3,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return ast.NewFuncCall(X[0].(*token.Token), X[1])
		},
	},
	ProdTabEntry{
		String: `DataList : Data	<< ast.NewDataList(X[0]) >>`,
		Id:         "DataList",
		NTType:     3,
		Index:      4,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return ast.NewDataList(X[0])
		},
	},
	ProdTabEntry{
		String: `DataList : "(" Data ")"	<< ast.NewDataList(X[1]) >>`,
		Id:         "DataList",
		NTType:     3,
		Index:      5,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return ast.NewDataList(X[1])
		},
	},
	ProdTabEntry{
		String: `DataList : DataList Data	<< ast.AppendData(X[0], X[1]) >>`,
		Id:         "DataList",
		NTType:     3,
		Index:      6,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return ast.AppendData(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `DataList : DataList "(" Data ")"	<< ast.AppendData(X[0], X[2]) >>`,
		Id:         "DataList",
		NTType:     3,
		Index:      7,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return ast.AppendData(X[0], X[2])
		},
	},
	ProdTabEntry{
		String: `Data : quotedstring	<< ast.NewData(X[0].(*token.Token), ast.String) >>`,
		Id:         "Data",
		NTType:     4,
		Index:      8,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return ast.NewData(X[0].(*token.Token), ast.String)
		},
	},
	ProdTabEntry{
		String: `Data : "(" FuncCall ")"	<< ast.NewFuncData(X[1]) >>`,
		Id:         "Data",
		NTType:     4,
		Index:      9,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return ast.NewFuncData(X[1])
		},
	},
}
